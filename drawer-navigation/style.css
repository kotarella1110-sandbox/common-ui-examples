:focus {
  outline: 3px solid tomato;
}

html {
  /* 常に縦スクロールバーが表示 */
  overflow-y: scroll
}

/* ドロワーが開いたときだけ hidden にしてスクロールが発生しないようにする */
html.drawerOpen {
  overflow: hidden;
}

/**
 * `width:100%` ではなく、オフセット指定によって画面上部をフルに使いつつ margin-right をビューポート内に収める
 * `position:fixed` が指定された `.Header` の包含ブロックはビューポート
 * `width:100%` があると、スクロールバーが消えた瞬間にスクロールバーが使用していた幅も含め、ビューポート幅に対して 100% となってしまう
 * この状態でmargin-rightが追加されても余白はビューポートの外
 */
.Header {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  height: 60px;
}

.Drawer {
  position: fixed;
  z-index: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.Drawer-backdrop {
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.Drawer-nav {
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  width: 280px;
}

.Nav {
  overflow: auto;
  /* 普段とは若干異なった固い感じのスクロール動作となってしまうため、使い慣れたスクロール感を出すために指定 */
  -webkit-overflow-scrolling: touch;
}

.Drawer[aria-expanded] {
  transition-property: visibility;
  transition-duration: 0.25s;
}

.Drawer[aria-expanded] .Drawer-backdrop {
  transition-property: opacity;
  transition-duration: 0.25s;
  transition-timing-function: linear;
}

.Drawer[aria-expanded] .Drawer-nav {
  transition-property: transform;
  transition-duration: 0.25s;
  transition-timing-function: ease;
}

/* 開いているとき */
.Drawer[aria-expanded="true"] {
  visibility: visible;
  /**
   * 開くボタンが押下され、開くアニメーションが始まった瞬間はドロワーが非表示であり、フォーカスできない
   * ドロワー本体が表示状態になる時は遷移アニメーションが開始と同時に終了し、状態がすぐに反映される
   */
  transition-duration: 0s;
}

.Drawer[aria-expanded="true"] .Drawer-backdrop {
  opacity: 1;
}

.Drawer[aria-expanded="true"] .Drawer-nav {
  transform: translateX(0);
}

/* 閉じているとき */
.Drawer[aria-expanded="false"] {
  visibility: hidden;
}

.Drawer[aria-expanded="false"] .Drawer-backdrop {
  opacity: 0;
}

.Drawer[aria-expanded="false"] .Drawer-nav {
  transform: translateX(100%);
}